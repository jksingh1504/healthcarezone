{"ast":null,"code":"/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nimport globalVars from './globalVars';\nvar removers = globalVars.removers;\n/**\n * Unsubscribe to UI events.\n * @method unsubscribe\n * @param {String} type - The type of event.\n * @param {Function} cb - The callback function.\n */\n\nfunction unsubscribe(type, cb) {\n  var remover = void 0;\n\n  for (var i = removers.length - 1; i >= 0; i -= 1) {\n    remover = removers[i];\n\n    if (remover._cb === cb && remover._type.indexOf(type) >= 0) {\n      remover.unsubscribe();\n      removers.splice(i, 1);\n    }\n  }\n}\n\nexport default unsubscribe;","map":{"version":3,"sources":["/home/jyoti-kamal/Desktop/All_Projects/healthcarezone_codebase/client/node_modules/subscribe-ui-event/dist-es/unsubscribe.js"],"names":["globalVars","removers","unsubscribe","type","cb","remover","i","length","_cb","_type","indexOf","splice"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,OAAOA,UAAP,MAAuB,cAAvB;AAEA,IAAIC,QAAQ,GAAGD,UAAU,CAACC,QAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,WAAT,CAAqBC,IAArB,EAA2BC,EAA3B,EAA+B;AAC7B,MAAIC,OAAO,GAAG,KAAK,CAAnB;;AACA,OAAK,IAAIC,CAAC,GAAGL,QAAQ,CAACM,MAAT,GAAkB,CAA/B,EAAkCD,CAAC,IAAI,CAAvC,EAA0CA,CAAC,IAAI,CAA/C,EAAkD;AAChDD,IAAAA,OAAO,GAAGJ,QAAQ,CAACK,CAAD,CAAlB;;AACA,QAAID,OAAO,CAACG,GAAR,KAAgBJ,EAAhB,IAAsBC,OAAO,CAACI,KAAR,CAAcC,OAAd,CAAsBP,IAAtB,KAA+B,CAAzD,EAA4D;AAC1DE,MAAAA,OAAO,CAACH,WAAR;AACAD,MAAAA,QAAQ,CAACU,MAAT,CAAgBL,CAAhB,EAAmB,CAAnB;AACD;AACF;AACF;;AAED,eAAeJ,WAAf","sourcesContent":["/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\n\nimport globalVars from './globalVars';\n\nvar removers = globalVars.removers;\n\n/**\n * Unsubscribe to UI events.\n * @method unsubscribe\n * @param {String} type - The type of event.\n * @param {Function} cb - The callback function.\n */\n\nfunction unsubscribe(type, cb) {\n  var remover = void 0;\n  for (var i = removers.length - 1; i >= 0; i -= 1) {\n    remover = removers[i];\n    if (remover._cb === cb && remover._type.indexOf(type) >= 0) {\n      remover.unsubscribe();\n      removers.splice(i, 1);\n    }\n  }\n}\n\nexport default unsubscribe;\n"]},"metadata":{},"sourceType":"module"}