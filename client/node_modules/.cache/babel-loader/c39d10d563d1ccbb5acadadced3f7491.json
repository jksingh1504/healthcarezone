{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@mui/utils\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef, unstable_useId as useId, unstable_useControlled as useControlled } from '@mui/utils';\nimport { useFormControlContext } from '../FormControl';\nimport { clamp, isNumber } from './utils';\nimport { extractEventHandlers } from '../utils/extractEventHandlers';\nconst STEP_KEYS = ['ArrowUp', 'ArrowDown', 'PageUp', 'PageDown'];\nconst SUPPORTED_KEYS = [...STEP_KEYS, 'Home', 'End'];\n\nfunction parseInput(v) {\n  return v ? String(v.trim()) : String(v);\n}\n/**\n *\n * Demos:\n *\n * - [Number Input](https://mui.com/base-ui/react-number-input/#hook)\n *\n * API:\n *\n * - [useNumberInput API](https://mui.com/base-ui/react-number-input/hooks-api/#use-number-input)\n */\n\n\nexport function useNumberInput(parameters) {\n  const {\n    min,\n    max,\n    step,\n    shiftMultiplier = 10,\n    defaultValue: defaultValueProp,\n    disabled: disabledProp = false,\n    error: errorProp = false,\n    onBlur,\n    onInputChange,\n    onFocus,\n    onChange,\n    required: requiredProp = false,\n    readOnly: readOnlyProp = false,\n    value: valueProp,\n    inputRef: inputRefProp,\n    inputId: inputIdProp\n  } = parameters; // TODO: make it work with FormControl\n\n  const formControlContext = useFormControlContext();\n  const {\n    current: isControlled\n  } = React.useRef(valueProp != null);\n  const handleInputRefWarning = React.useCallback(instance => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (instance && instance.nodeName !== 'INPUT' && !instance.focus) {\n        console.error(['MUI: You have provided a `slots.input` to the input component', 'that does not correctly handle the `ref` prop.', 'Make sure the `ref` prop is called with a HTMLInputElement.'].join('\\n'));\n      }\n    }\n  }, []);\n  const inputRef = React.useRef(null);\n  const handleInputRef = useForkRef(inputRef, inputRefProp, handleInputRefWarning);\n  const inputId = useId(inputIdProp);\n  const [focused, setFocused] = React.useState(false); // the \"final\" value\n\n  const [value, setValue] = useControlled({\n    controlled: valueProp,\n    default: defaultValueProp,\n    name: 'NumberInput'\n  }); // the (potentially) dirty or invalid input value\n\n  const [dirtyValue, setDirtyValue] = React.useState(value ? String(value) : undefined);\n  React.useEffect(() => {\n    if (!formControlContext && disabledProp && focused) {\n      setFocused(false);\n      onBlur == null || onBlur();\n    }\n  }, [formControlContext, disabledProp, focused, onBlur]);\n\n  const handleFocus = otherHandlers => event => {\n    var _otherHandlers$onFocu;\n\n    (_otherHandlers$onFocu = otherHandlers.onFocus) == null || _otherHandlers$onFocu.call(otherHandlers, event);\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (formControlContext && formControlContext.onFocus) {\n      var _formControlContext$o;\n\n      formControlContext == null || (_formControlContext$o = formControlContext.onFocus) == null || _formControlContext$o.call(formControlContext);\n    }\n\n    setFocused(true);\n  };\n\n  const handleValueChange = () => (event, val) => {\n    let newValue;\n\n    if (val === undefined) {\n      newValue = val;\n      setDirtyValue('');\n    } else {\n      newValue = clamp(val, min, max, step);\n      setDirtyValue(String(newValue));\n    }\n\n    setValue(newValue);\n\n    if (isNumber(newValue)) {\n      onChange == null || onChange(event, newValue);\n    } else {\n      onChange == null || onChange(event, undefined);\n    }\n  };\n\n  const handleInputChange = otherHandlers => event => {\n    var _formControlContext$o2, _otherHandlers$onInpu;\n\n    if (!isControlled && event.target === null) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: Expected valid input target. Did you use a custom \\`slots.input\\` and forget to forward refs? See https://mui.com/r/input-component-ref-interface for more info.` : _formatMuiErrorMessage(17));\n    }\n\n    formControlContext == null || (_formControlContext$o2 = formControlContext.onChange) == null || _formControlContext$o2.call(formControlContext, event);\n    (_otherHandlers$onInpu = otherHandlers.onInputChange) == null || _otherHandlers$onInpu.call(otherHandlers, event);\n    const val = parseInput(event.currentTarget.value);\n\n    if (val === '' || val === '-') {\n      setDirtyValue(val);\n      setValue(undefined);\n    }\n\n    if (val.match(/^-?\\d+?$/)) {\n      setDirtyValue(val);\n      setValue(parseInt(val, 10));\n    }\n  };\n\n  const handleBlur = otherHandlers => event => {\n    var _otherHandlers$onBlur;\n\n    const val = parseInput(event.currentTarget.value);\n    (_otherHandlers$onBlur = otherHandlers.onBlur) == null || _otherHandlers$onBlur.call(otherHandlers, event);\n\n    if (val === '' || val === '-') {\n      handleValueChange()(event, undefined);\n    } else {\n      handleValueChange()(event, parseInt(val, 10));\n    }\n\n    if (formControlContext && formControlContext.onBlur) {\n      formControlContext.onBlur();\n    }\n\n    setFocused(false);\n  };\n\n  const handleClick = otherHandlers => event => {\n    var _otherHandlers$onClic;\n\n    if (inputRef.current && event.currentTarget === event.target) {\n      inputRef.current.focus();\n    }\n\n    (_otherHandlers$onClic = otherHandlers.onClick) == null || _otherHandlers$onClic.call(otherHandlers, event);\n  };\n\n  const handleStep = direction => event => {\n    let newValue;\n\n    if (isNumber(value)) {\n      const multiplier = event.shiftKey || event.key === 'PageUp' || event.key === 'PageDown' ? shiftMultiplier : 1;\n      newValue = {\n        up: value + (step != null ? step : 1) * multiplier,\n        down: value - (step != null ? step : 1) * multiplier\n      }[direction];\n    } else {\n      // no value\n      newValue = {\n        up: min != null ? min : 0,\n        down: max != null ? max : 0\n      }[direction];\n    }\n\n    handleValueChange()(event, newValue);\n  };\n\n  const handleKeyDown = otherHandlers => event => {\n    var _otherHandlers$onKeyD;\n\n    (_otherHandlers$onKeyD = otherHandlers.onKeyDown) == null || _otherHandlers$onKeyD.call(otherHandlers, event);\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (SUPPORTED_KEYS.includes(event.key)) {\n      event.preventDefault();\n    }\n\n    if (STEP_KEYS.includes(event.key)) {\n      const direction = {\n        ArrowUp: 'up',\n        ArrowDown: 'down',\n        PageUp: 'up',\n        PageDown: 'down'\n      }[event.key];\n      handleStep(direction)(event);\n    }\n\n    if (event.key === 'Home' && isNumber(max)) {\n      handleValueChange()(event, max);\n    }\n\n    if (event.key === 'End' && isNumber(min)) {\n      handleValueChange()(event, min);\n    }\n  };\n\n  const getRootProps = function () {\n    let externalProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const propsEventHandlers = extractEventHandlers(parameters, ['onBlur', 'onInputChange', 'onFocus', 'onChange']);\n\n    const externalEventHandlers = _extends({}, propsEventHandlers, extractEventHandlers(externalProps));\n\n    return _extends({}, externalProps, externalEventHandlers, {\n      onClick: handleClick(externalEventHandlers)\n    });\n  };\n\n  const getInputProps = function () {\n    let externalProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    var _ref;\n\n    const externalEventHandlers = _extends({\n      onBlur,\n      onFocus\n    }, extractEventHandlers(externalProps, ['onInputChange']));\n\n    const mergedEventHandlers = _extends({}, externalProps, externalEventHandlers, {\n      onFocus: handleFocus(externalEventHandlers),\n      onChange: handleInputChange(_extends({}, externalEventHandlers, {\n        onInputChange\n      })),\n      onBlur: handleBlur(externalEventHandlers),\n      onKeyDown: handleKeyDown(externalEventHandlers)\n    });\n\n    const displayValue = (_ref = focused ? dirtyValue : value) != null ? _ref : '';\n    return _extends({}, mergedEventHandlers, {\n      type: 'text',\n      id: inputId,\n      'aria-invalid': errorProp || undefined,\n      defaultValue: undefined,\n      ref: handleInputRef,\n      value: displayValue,\n      'aria-valuenow': displayValue,\n      'aria-valuetext': String(displayValue),\n      'aria-valuemin': min,\n      'aria-valuemax': max,\n      autoComplete: 'off',\n      autoCorrect: 'off',\n      spellCheck: 'false',\n      required: requiredProp,\n      readOnly: readOnlyProp,\n      'aria-disabled': disabledProp,\n      disabled: disabledProp\n    });\n  };\n\n  const handleStepperButtonMouseDown = event => {\n    event.preventDefault();\n\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n\n  const stepperButtonCommonProps = {\n    'aria-controls': inputId,\n    tabIndex: -1\n  };\n  const isIncrementDisabled = disabledProp || (isNumber(value) ? value >= (max != null ? max : Number.MAX_SAFE_INTEGER) : false);\n\n  const getIncrementButtonProps = function () {\n    let externalProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _extends({}, externalProps, stepperButtonCommonProps, {\n      disabled: isIncrementDisabled,\n      'aria-disabled': isIncrementDisabled,\n      onMouseDown: handleStepperButtonMouseDown,\n      onClick: handleStep('up')\n    });\n  };\n\n  const isDecrementDisabled = disabledProp || (isNumber(value) ? value <= (min != null ? min : Number.MIN_SAFE_INTEGER) : false);\n\n  const getDecrementButtonProps = function () {\n    let externalProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _extends({}, externalProps, stepperButtonCommonProps, {\n      disabled: isDecrementDisabled,\n      'aria-disabled': isDecrementDisabled,\n      onMouseDown: handleStepperButtonMouseDown,\n      onClick: handleStep('down')\n    });\n  };\n\n  return {\n    disabled: disabledProp,\n    error: errorProp,\n    focused,\n    formControlContext,\n    getInputProps,\n    getIncrementButtonProps,\n    getDecrementButtonProps,\n    getRootProps,\n    required: requiredProp,\n    value: focused ? dirtyValue : value,\n    isIncrementDisabled,\n    isDecrementDisabled,\n    inputValue: dirtyValue\n  };\n}","map":{"version":3,"sources":["/home/jyoti-kamal/Desktop/All_Projects/healthcarezone_codebase/client/node_modules/@mui/base/unstable_useNumberInput/useNumberInput.js"],"names":["_extends","formatMuiErrorMessage","_formatMuiErrorMessage","React","unstable_useForkRef","useForkRef","unstable_useId","useId","unstable_useControlled","useControlled","useFormControlContext","clamp","isNumber","extractEventHandlers","STEP_KEYS","SUPPORTED_KEYS","parseInput","v","String","trim","useNumberInput","parameters","min","max","step","shiftMultiplier","defaultValue","defaultValueProp","disabled","disabledProp","error","errorProp","onBlur","onInputChange","onFocus","onChange","required","requiredProp","readOnly","readOnlyProp","value","valueProp","inputRef","inputRefProp","inputId","inputIdProp","formControlContext","current","isControlled","useRef","handleInputRefWarning","useCallback","instance","process","env","NODE_ENV","nodeName","focus","console","join","handleInputRef","focused","setFocused","useState","setValue","controlled","default","name","dirtyValue","setDirtyValue","undefined","useEffect","handleFocus","otherHandlers","event","_otherHandlers$onFocu","call","defaultPrevented","_formControlContext$o","handleValueChange","val","newValue","handleInputChange","_formControlContext$o2","_otherHandlers$onInpu","target","Error","currentTarget","match","parseInt","handleBlur","_otherHandlers$onBlur","handleClick","_otherHandlers$onClic","onClick","handleStep","direction","multiplier","shiftKey","key","up","down","handleKeyDown","_otherHandlers$onKeyD","onKeyDown","includes","preventDefault","ArrowUp","ArrowDown","PageUp","PageDown","getRootProps","externalProps","propsEventHandlers","externalEventHandlers","getInputProps","_ref","mergedEventHandlers","displayValue","type","id","ref","autoComplete","autoCorrect","spellCheck","handleStepperButtonMouseDown","stepperButtonCommonProps","tabIndex","isIncrementDisabled","Number","MAX_SAFE_INTEGER","getIncrementButtonProps","onMouseDown","isDecrementDisabled","MIN_SAFE_INTEGER","getDecrementButtonProps","inputValue"],"mappings":"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","sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@mui/utils\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef, unstable_useId as useId, unstable_useControlled as useControlled } from '@mui/utils';\nimport { useFormControlContext } from '../FormControl';\nimport { clamp, isNumber } from './utils';\nimport { extractEventHandlers } from '../utils/extractEventHandlers';\nconst STEP_KEYS = ['ArrowUp', 'ArrowDown', 'PageUp', 'PageDown'];\nconst SUPPORTED_KEYS = [...STEP_KEYS, 'Home', 'End'];\nfunction parseInput(v) {\n  return v ? String(v.trim()) : String(v);\n}\n\n/**\n *\n * Demos:\n *\n * - [Number Input](https://mui.com/base-ui/react-number-input/#hook)\n *\n * API:\n *\n * - [useNumberInput API](https://mui.com/base-ui/react-number-input/hooks-api/#use-number-input)\n */\nexport function useNumberInput(parameters) {\n  const {\n    min,\n    max,\n    step,\n    shiftMultiplier = 10,\n    defaultValue: defaultValueProp,\n    disabled: disabledProp = false,\n    error: errorProp = false,\n    onBlur,\n    onInputChange,\n    onFocus,\n    onChange,\n    required: requiredProp = false,\n    readOnly: readOnlyProp = false,\n    value: valueProp,\n    inputRef: inputRefProp,\n    inputId: inputIdProp\n  } = parameters;\n\n  // TODO: make it work with FormControl\n  const formControlContext = useFormControlContext();\n  const {\n    current: isControlled\n  } = React.useRef(valueProp != null);\n  const handleInputRefWarning = React.useCallback(instance => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (instance && instance.nodeName !== 'INPUT' && !instance.focus) {\n        console.error(['MUI: You have provided a `slots.input` to the input component', 'that does not correctly handle the `ref` prop.', 'Make sure the `ref` prop is called with a HTMLInputElement.'].join('\\n'));\n      }\n    }\n  }, []);\n  const inputRef = React.useRef(null);\n  const handleInputRef = useForkRef(inputRef, inputRefProp, handleInputRefWarning);\n  const inputId = useId(inputIdProp);\n  const [focused, setFocused] = React.useState(false);\n\n  // the \"final\" value\n  const [value, setValue] = useControlled({\n    controlled: valueProp,\n    default: defaultValueProp,\n    name: 'NumberInput'\n  });\n\n  // the (potentially) dirty or invalid input value\n  const [dirtyValue, setDirtyValue] = React.useState(value ? String(value) : undefined);\n  React.useEffect(() => {\n    if (!formControlContext && disabledProp && focused) {\n      setFocused(false);\n      onBlur == null || onBlur();\n    }\n  }, [formControlContext, disabledProp, focused, onBlur]);\n  const handleFocus = otherHandlers => event => {\n    var _otherHandlers$onFocu;\n    (_otherHandlers$onFocu = otherHandlers.onFocus) == null || _otherHandlers$onFocu.call(otherHandlers, event);\n    if (event.defaultPrevented) {\n      return;\n    }\n    if (formControlContext && formControlContext.onFocus) {\n      var _formControlContext$o;\n      formControlContext == null || (_formControlContext$o = formControlContext.onFocus) == null || _formControlContext$o.call(formControlContext);\n    }\n    setFocused(true);\n  };\n  const handleValueChange = () => (event, val) => {\n    let newValue;\n    if (val === undefined) {\n      newValue = val;\n      setDirtyValue('');\n    } else {\n      newValue = clamp(val, min, max, step);\n      setDirtyValue(String(newValue));\n    }\n    setValue(newValue);\n    if (isNumber(newValue)) {\n      onChange == null || onChange(event, newValue);\n    } else {\n      onChange == null || onChange(event, undefined);\n    }\n  };\n  const handleInputChange = otherHandlers => event => {\n    var _formControlContext$o2, _otherHandlers$onInpu;\n    if (!isControlled && event.target === null) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: Expected valid input target. Did you use a custom \\`slots.input\\` and forget to forward refs? See https://mui.com/r/input-component-ref-interface for more info.` : _formatMuiErrorMessage(17));\n    }\n    formControlContext == null || (_formControlContext$o2 = formControlContext.onChange) == null || _formControlContext$o2.call(formControlContext, event);\n    (_otherHandlers$onInpu = otherHandlers.onInputChange) == null || _otherHandlers$onInpu.call(otherHandlers, event);\n    const val = parseInput(event.currentTarget.value);\n    if (val === '' || val === '-') {\n      setDirtyValue(val);\n      setValue(undefined);\n    }\n    if (val.match(/^-?\\d+?$/)) {\n      setDirtyValue(val);\n      setValue(parseInt(val, 10));\n    }\n  };\n  const handleBlur = otherHandlers => event => {\n    var _otherHandlers$onBlur;\n    const val = parseInput(event.currentTarget.value);\n    (_otherHandlers$onBlur = otherHandlers.onBlur) == null || _otherHandlers$onBlur.call(otherHandlers, event);\n    if (val === '' || val === '-') {\n      handleValueChange()(event, undefined);\n    } else {\n      handleValueChange()(event, parseInt(val, 10));\n    }\n    if (formControlContext && formControlContext.onBlur) {\n      formControlContext.onBlur();\n    }\n    setFocused(false);\n  };\n  const handleClick = otherHandlers => event => {\n    var _otherHandlers$onClic;\n    if (inputRef.current && event.currentTarget === event.target) {\n      inputRef.current.focus();\n    }\n    (_otherHandlers$onClic = otherHandlers.onClick) == null || _otherHandlers$onClic.call(otherHandlers, event);\n  };\n  const handleStep = direction => event => {\n    let newValue;\n    if (isNumber(value)) {\n      const multiplier = event.shiftKey || event.key === 'PageUp' || event.key === 'PageDown' ? shiftMultiplier : 1;\n      newValue = {\n        up: value + (step != null ? step : 1) * multiplier,\n        down: value - (step != null ? step : 1) * multiplier\n      }[direction];\n    } else {\n      // no value\n      newValue = {\n        up: min != null ? min : 0,\n        down: max != null ? max : 0\n      }[direction];\n    }\n    handleValueChange()(event, newValue);\n  };\n  const handleKeyDown = otherHandlers => event => {\n    var _otherHandlers$onKeyD;\n    (_otherHandlers$onKeyD = otherHandlers.onKeyDown) == null || _otherHandlers$onKeyD.call(otherHandlers, event);\n    if (event.defaultPrevented) {\n      return;\n    }\n    if (SUPPORTED_KEYS.includes(event.key)) {\n      event.preventDefault();\n    }\n    if (STEP_KEYS.includes(event.key)) {\n      const direction = {\n        ArrowUp: 'up',\n        ArrowDown: 'down',\n        PageUp: 'up',\n        PageDown: 'down'\n      }[event.key];\n      handleStep(direction)(event);\n    }\n    if (event.key === 'Home' && isNumber(max)) {\n      handleValueChange()(event, max);\n    }\n    if (event.key === 'End' && isNumber(min)) {\n      handleValueChange()(event, min);\n    }\n  };\n  const getRootProps = (externalProps = {}) => {\n    const propsEventHandlers = extractEventHandlers(parameters, ['onBlur', 'onInputChange', 'onFocus', 'onChange']);\n    const externalEventHandlers = _extends({}, propsEventHandlers, extractEventHandlers(externalProps));\n    return _extends({}, externalProps, externalEventHandlers, {\n      onClick: handleClick(externalEventHandlers)\n    });\n  };\n  const getInputProps = (externalProps = {}) => {\n    var _ref;\n    const externalEventHandlers = _extends({\n      onBlur,\n      onFocus\n    }, extractEventHandlers(externalProps, ['onInputChange']));\n    const mergedEventHandlers = _extends({}, externalProps, externalEventHandlers, {\n      onFocus: handleFocus(externalEventHandlers),\n      onChange: handleInputChange(_extends({}, externalEventHandlers, {\n        onInputChange\n      })),\n      onBlur: handleBlur(externalEventHandlers),\n      onKeyDown: handleKeyDown(externalEventHandlers)\n    });\n    const displayValue = (_ref = focused ? dirtyValue : value) != null ? _ref : '';\n    return _extends({}, mergedEventHandlers, {\n      type: 'text',\n      id: inputId,\n      'aria-invalid': errorProp || undefined,\n      defaultValue: undefined,\n      ref: handleInputRef,\n      value: displayValue,\n      'aria-valuenow': displayValue,\n      'aria-valuetext': String(displayValue),\n      'aria-valuemin': min,\n      'aria-valuemax': max,\n      autoComplete: 'off',\n      autoCorrect: 'off',\n      spellCheck: 'false',\n      required: requiredProp,\n      readOnly: readOnlyProp,\n      'aria-disabled': disabledProp,\n      disabled: disabledProp\n    });\n  };\n  const handleStepperButtonMouseDown = event => {\n    event.preventDefault();\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n  const stepperButtonCommonProps = {\n    'aria-controls': inputId,\n    tabIndex: -1\n  };\n  const isIncrementDisabled = disabledProp || (isNumber(value) ? value >= (max != null ? max : Number.MAX_SAFE_INTEGER) : false);\n  const getIncrementButtonProps = (externalProps = {}) => {\n    return _extends({}, externalProps, stepperButtonCommonProps, {\n      disabled: isIncrementDisabled,\n      'aria-disabled': isIncrementDisabled,\n      onMouseDown: handleStepperButtonMouseDown,\n      onClick: handleStep('up')\n    });\n  };\n  const isDecrementDisabled = disabledProp || (isNumber(value) ? value <= (min != null ? min : Number.MIN_SAFE_INTEGER) : false);\n  const getDecrementButtonProps = (externalProps = {}) => {\n    return _extends({}, externalProps, stepperButtonCommonProps, {\n      disabled: isDecrementDisabled,\n      'aria-disabled': isDecrementDisabled,\n      onMouseDown: handleStepperButtonMouseDown,\n      onClick: handleStep('down')\n    });\n  };\n  return {\n    disabled: disabledProp,\n    error: errorProp,\n    focused,\n    formControlContext,\n    getInputProps,\n    getIncrementButtonProps,\n    getDecrementButtonProps,\n    getRootProps,\n    required: requiredProp,\n    value: focused ? dirtyValue : value,\n    isIncrementDisabled,\n    isDecrementDisabled,\n    inputValue: dirtyValue\n  };\n}"]},"metadata":{},"sourceType":"module"}